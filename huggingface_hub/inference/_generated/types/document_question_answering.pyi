from .base import BaseInferenceType as BaseInferenceType
from dataclasses import dataclass
from typing import Any

@dataclass
class DocumentQuestionAnsweringInputData(BaseInferenceType):
    image: Any
    question: str
    def __init__(self, image, question) -> None: ...

@dataclass
class DocumentQuestionAnsweringParameters(BaseInferenceType):
    doc_stride: int | None = ...
    handle_impossible_answer: bool | None = ...
    lang: str | None = ...
    max_answer_len: int | None = ...
    max_question_len: int | None = ...
    max_seq_len: int | None = ...
    top_k: int | None = ...
    word_boxes: list[list[float] | str] | None = ...
    def __init__(self, doc_stride=..., handle_impossible_answer=..., lang=..., max_answer_len=..., max_question_len=..., max_seq_len=..., top_k=..., word_boxes=...) -> None: ...

@dataclass
class DocumentQuestionAnsweringInput(BaseInferenceType):
    inputs: DocumentQuestionAnsweringInputData
    parameters: DocumentQuestionAnsweringParameters | None = ...
    def __init__(self, inputs, parameters=...) -> None: ...

@dataclass
class DocumentQuestionAnsweringOutputElement(BaseInferenceType):
    answer: str
    end: int
    score: float
    start: int
    words: list[int]
    def __init__(self, answer, end, score, start, words) -> None: ...
