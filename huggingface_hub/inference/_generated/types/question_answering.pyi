from .base import BaseInferenceType as BaseInferenceType
from dataclasses import dataclass

@dataclass
class QuestionAnsweringInputData(BaseInferenceType):
    context: str
    question: str
    def __init__(self, context, question) -> None: ...

@dataclass
class QuestionAnsweringParameters(BaseInferenceType):
    align_to_words: bool | None = ...
    doc_stride: int | None = ...
    handle_impossible_answer: bool | None = ...
    max_answer_len: int | None = ...
    max_question_len: int | None = ...
    max_seq_len: int | None = ...
    top_k: int | None = ...
    def __init__(self, align_to_words=..., doc_stride=..., handle_impossible_answer=..., max_answer_len=..., max_question_len=..., max_seq_len=..., top_k=...) -> None: ...

@dataclass
class QuestionAnsweringInput(BaseInferenceType):
    inputs: QuestionAnsweringInputData
    parameters: QuestionAnsweringParameters | None = ...
    def __init__(self, inputs, parameters=...) -> None: ...

@dataclass
class QuestionAnsweringOutputElement(BaseInferenceType):
    answer: str
    end: int
    score: float
    start: int
    def __init__(self, answer, end, score, start) -> None: ...
