from .. import TLObject as TLObject, types as types
from ...errors import RPCError as RPCError
from ...extensions import markdown as markdown
from ...utils import get_input_peer as get_input_peer, get_peer as get_peer, get_peer_id as get_peer_id
from ..functions.messages import SaveDraftRequest as SaveDraftRequest
from ..types import DraftMessage as DraftMessage
from _typeshed import Incomplete

class Draft:
    date: Incomplete
    link_preview: Incomplete
    reply_to_msg_id: Incomplete
    def __init__(self, client, entity, draft) -> None: ...
    @property
    def entity(self): ...
    @property
    def input_entity(self): ...
    async def get_entity(self): ...
    async def get_input_entity(self): ...
    @property
    def text(self): ...
    @property
    def raw_text(self): ...
    @property
    def is_empty(self): ...
    async def set_message(self, text: Incomplete | None = None, reply_to: int = 0, parse_mode=(), link_preview: Incomplete | None = None): ...
    async def send(self, clear: bool = True, parse_mode=()) -> None: ...
    async def delete(self): ...
    def to_dict(self): ...
    def stringify(self): ...
