from ... import errors as errors, helpers as helpers, utils as utils
from .chatgetter import ChatGetter as ChatGetter
from _typeshed import Incomplete

class Conversation(ChatGetter):
    def __init__(self, client, input_chat, *, timeout, total_timeout, max_messages, exclusive, replies_are_responses) -> None: ...
    async def send_message(self, *args, **kwargs): ...
    async def send_file(self, *args, **kwargs): ...
    def mark_read(self, message: Incomplete | None = None): ...
    def get_response(self, message: Incomplete | None = None, *, timeout: Incomplete | None = None): ...
    def get_reply(self, message: Incomplete | None = None, *, timeout: Incomplete | None = None): ...
    def get_edit(self, message: Incomplete | None = None, *, timeout: Incomplete | None = None): ...
    def wait_read(self, message: Incomplete | None = None, *, timeout: Incomplete | None = None): ...
    async def wait_event(self, event, *, timeout: Incomplete | None = None): ...
    async def __aenter__(self): ...
    def cancel(self) -> None: ...
    async def cancel_all(self) -> None: ...
    async def __aexit__(self, exc_type, exc_val, exc_tb) -> None: ...
    __enter__: Incomplete
    __exit__: Incomplete
