from .. import helpers as helpers, utils as utils
from ..tl import TLRequest as TLRequest, functions as functions
from .telegramclient import TelegramClient as TelegramClient
from _typeshed import Incomplete

class _TakeoutClient:
    def __init__(self, finalize, client, request) -> None: ...
    @property
    def success(self): ...
    @success.setter
    def success(self, value) -> None: ...
    async def __aenter__(self): ...
    async def __aexit__(self, exc_type, exc_value, traceback) -> None: ...
    __enter__: Incomplete
    __exit__: Incomplete
    async def __call__(self, request, ordered: bool = False): ...
    def __getattribute__(self, name): ...
    def __getattr__(self, name): ...
    def __setattr__(self, name, value): ...

class AccountMethods:
    def takeout(self, finalize: bool = True, *, contacts: bool = None, users: bool = None, chats: bool = None, megagroups: bool = None, channels: bool = None, files: bool = None, max_file_size: bool = None) -> TelegramClient: ...
    async def end_takeout(self, success: bool) -> bool: ...
