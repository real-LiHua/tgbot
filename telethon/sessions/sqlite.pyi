from .. import utils as utils
from ..crypto import AuthKey as AuthKey
from ..tl import types as types
from ..tl.types import InputDocument as InputDocument, InputPhoto as InputPhoto, PeerChannel as PeerChannel, PeerChat as PeerChat, PeerUser as PeerUser
from .memory import MemorySession as MemorySession
from _typeshed import Incomplete

sqlite3_err: Incomplete
EXTENSION: str
CURRENT_VERSION: int

class SQLiteSession(MemorySession):
    filename: str
    save_entities: bool
    def __init__(self, session_id: Incomplete | None = None) -> None: ...
    def clone(self, to_instance: Incomplete | None = None): ...
    def set_dc(self, dc_id, server_address, port) -> None: ...
    @MemorySession.auth_key.setter
    def auth_key(self, value) -> None: ...
    @MemorySession.takeout_id.setter
    def takeout_id(self, value) -> None: ...
    def get_update_state(self, entity_id): ...
    def set_update_state(self, entity_id, state) -> None: ...
    def get_update_states(self): ...
    def save(self) -> None: ...
    def close(self) -> None: ...
    def delete(self): ...
    @classmethod
    def list_sessions(cls): ...
    def process_entities(self, tlo) -> None: ...
    def get_entity_rows_by_phone(self, phone): ...
    def get_entity_rows_by_username(self, username): ...
    def get_entity_rows_by_name(self, name): ...
    def get_entity_rows_by_id(self, id, exact: bool = True): ...
    def get_file(self, md5_digest, file_size, cls): ...
    def cache_file(self, md5_digest, file_size, instance) -> None: ...
