from .base import BaseInferenceType as BaseInferenceType
from _typeshed import Incomplete
from dataclasses import dataclass
from typing import Any

VideoClassificationOutputTransform: Incomplete

@dataclass
class VideoClassificationParameters(BaseInferenceType):
    frame_sampling_rate: int | None = ...
    function_to_apply: VideoClassificationOutputTransform | None = ...
    num_frames: int | None = ...
    top_k: int | None = ...
    def __init__(self, frame_sampling_rate=..., function_to_apply=..., num_frames=..., top_k=...) -> None: ...

@dataclass
class VideoClassificationInput(BaseInferenceType):
    inputs: Any
    parameters: VideoClassificationParameters | None = ...
    def __init__(self, inputs, parameters=...) -> None: ...

@dataclass
class VideoClassificationOutputElement(BaseInferenceType):
    label: str
    score: float
    def __init__(self, label, score) -> None: ...
