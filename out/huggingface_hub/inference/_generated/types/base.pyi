from dataclasses import dataclass
from typing import Any, TypeVar

T = TypeVar('T', bound='BaseInferenceType')

@dataclass
class BaseInferenceType(dict):
    @classmethod
    def parse_obj_as_list(cls, data: bytes | str | list | dict) -> list[T]: ...
    @classmethod
    def parse_obj_as_instance(cls, data: bytes | str | list | dict) -> T: ...
    @classmethod
    def parse_obj(cls, data: bytes | str | list | dict) -> list[T] | T: ...
    def __post_init__(self) -> None: ...
    def __setitem__(self, __key: Any, __value: Any) -> None: ...
    def __setattr__(self, __name: str, /, __value: Any) -> None: ...

def normalize_key(key: str) -> str: ...
